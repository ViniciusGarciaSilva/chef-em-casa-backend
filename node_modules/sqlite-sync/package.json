{
  "_args": [
    [
      {
        "raw": "sqlite-sync",
        "scope": null,
        "escapedName": "sqlite-sync",
        "name": "sqlite-sync",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Projetos\\chef-em-casa-backend"
    ]
  ],
  "_from": "sqlite-sync@latest",
  "_id": "sqlite-sync@0.3.8",
  "_inCache": true,
  "_location": "/sqlite-sync",
  "_nodeVersion": "9.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/sqlite-sync_0.3.8_1524075220050_0.10880389092577869"
  },
  "_npmUser": {
    "name": "jayralencar",
    "email": "jayralencarpereira@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "sqlite-sync",
    "scope": null,
    "escapedName": "sqlite-sync",
    "name": "sqlite-sync",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/sqlite-sync/-/sqlite-sync-0.3.8.tgz",
  "_shasum": "1045902a255697e2fb3f1255fc14c104f49fa49b",
  "_shrinkwrap": null,
  "_spec": "sqlite-sync",
  "_where": "C:\\Projetos\\chef-em-casa-backend",
  "author": {
    "name": "Jayr Alencar",
    "email": "jayralencarpereira@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/JayrAlencar/sqlite-sync.js/issues"
  },
  "dependencies": {
    "npm": "^5.8.0",
    "sql.js": "latest"
  },
  "description": "Node module to sqlite sync and async ",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-Ith8W6t+NE6syGybGoeIKJ2sjPGu88tnlXxvuIRS5xJcUKC0eCud7fhJLiMDZKEEDUZgBZN7n0OhaOwAkBxm/A==",
    "shasum": "1045902a255697e2fb3f1255fc14c104f49fa49b",
    "tarball": "https://registry.npmjs.org/sqlite-sync/-/sqlite-sync-0.3.8.tgz",
    "fileCount": 6,
    "unpackedSize": 15182,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa14rVCRA9TVsSAnZWagAACzIP/0+DkGajSC/11bsAUnXi\ngdJnspeOUt/HDAlcEkDUtXHaikp/JL25LTv+0/B2MLo9xgYoy8fZcTo0aV8Q\n7AZqQaczN1Sa17yevemQPZjb8FtsEXBcaMBIr+mg6OHDy/XVN3I2ppn6OS1o\ngTz3ItC4qV1kd82bCVS/ygXKgcEMJaJ5WxiCe5AkC+Sqd6PGez467KgIJAEC\n/U/NJhOpG2vS/pZ0Bx5LGMJtkEIcMijpSdXvIPYb8RTTj6Wl6F4egqD/DrWg\n7hbtks7i7TDvXsi1ZG4dWQEV1U9WWgYX3s/ZzvGNNVLL/g0zxGVNMhSfK1WT\nX+HLfig7kIRKcrLrBwyyhI0NOqdJbtAY1aa1TL+ocyzaWwLJ8SP6pYR4tPx/\nuw0OXDMOdkzPyc1PezU7AX8U5JUFLIaHr7fIIz1Ql4OnvlXQreHPnz53SodO\nO/L9TN+ZkmFGLkW6yH9r6VcS625CbEZ9OZ5GcAwKDEDdMRhpoEQ1/CGP27tM\n7BuY1vW7Wn3nOO8Yskb2IBjegvX4cmAITCxiH839JOzYd9093KmbimXs00wW\nL9h5eXlt6GU0+iK1wCGI9De7blDoGPzDkp9XqtSmGE/Pmuw9Tk3dwLrnbLro\nwzH6POCtitcpQUzJchBZcBC1Bj91LpjcZCPMtUUqBLmyy5y+ns9S6cPYONzp\n5Rq6\r\n=TGdG\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "gitHead": "fce1b5958ce1ff4bd6d3c4aac779ebca1411830f",
  "homepage": "https://github.com/JayrAlencar/sqlite-sync.js#readme",
  "keywords": [
    "sqlite",
    "sqlite3",
    "sync",
    "async",
    "database"
  ],
  "license": "MIT",
  "main": "sqlite.js",
  "maintainers": [
    {
      "name": "jayralencar",
      "email": "jayralencarpereira@gmail.com"
    }
  ],
  "name": "sqlite-sync",
  "optionalDependencies": {},
  "readme": "# sqlite-sync.js\nNode module to sqlite sync and async</br>\n[![NPM](https://nodei.co/npm/sqlite-sync.png?downloads=true&downloadRank=true)](https://nodei.co/npm/sqlite-sync/)\n\nnode.js package for database connection with <strong> SQLite </strong>, and execute SQL commands synchronously or asynchronously.\n\n# Install\n```shell\nnpm install sqlite-sync\n```\n\n# Usage\n```js\nvar sqlite = require('sqlite-sync'); //requiring\n\n//Connecting - if the file does not exist it will be created\nsqlite.connect('test/test.db'); \n\n//Creating table - you can run any command\nsqlite.run(\"CREATE TABLE COMPANYS(ID  INTEGER PRIMARY KEY AUTOINCREMENT, NAME TEXT NOT NULL);\",function(res){\n\tif(res.error)\n\t\tthrow res.error;\n\tconsole.log(res);\n});\n\n//Inserting - this function can be sync to, look the wiki\nsqlite.insert(\"COMPANYS\",{NAME:\"My COMPANY\"}, function(res){\n\tif(res.error)\n\t\tthrow res.error;\n\tconsole.log(res);\n});\n\n//Updating - returns the number of rows modified - can be async too\nvar rows_modified = sqlite.update(\"COMPANYS\",{NAME:\"TESTING UPDATE\"},{ID:1});\n\n//Create your function\nfunction test(a,b){\n\treturn a+b;\n}\n\n//Add your function to connection\nsqlite.create_function(test);\n\n// Use your function in the SQL\nconsole.log(sqlite.run(\"SELECT ID, test(NAME, ' Inc') as NAME FROM COMPANYS\"));\n\n// Closing connection \nsqlite.close();\n\n```\n\n<br/>\n## See more - <a href=\"https://github.com/JayrAlencar/sqlite-sync.js/wiki\">Wiki</a>\n# Developer\n<a href=\"//jayralencar.com.br\">Jayr Alencar</a>\n# Look <a href=\"//clubedosgeeks.com.br\">Clube dos Geeks</a>\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/JayrAlencar/sqlite-sync.js.git"
  },
  "scripts": {
    "test": "node test/test.js"
  },
  "tags": [
    "sqlite",
    "sqlite3",
    "sync",
    "async",
    "database"
  ],
  "version": "0.3.8"
}
